/* ==========================================================================
   Mixins
   ========================================================================== */

/*
 * Media Queries
 */
 @mixin for-desktop-huge-up {
	@media ( min-width: 1801px ) { @content; }
}
@mixin for-desktop-large-up {
	@media ( min-width: 1501px ) { @content; }
}
@mixin for-desktop-small-down {
	@media ( max-width: 1359px ) { @content; }
}
@mixin for-tablet-landscape-down {
	@media ( max-width: 1200px ) { @content; }
}
@mixin for-tablet-portrait-down {
	@media ( max-width: 991px ) { @content; }
}
@mixin for-phone-large-down {
	@media ( max-width: 767px ) { @content; }
}
@mixin for-phone-down {
	@media ( max-width: 575px ) { @content; }
}
@mixin for-phone-small-down {
	@media ( max-width: 370px ) { @content; }
}
@mixin for-tall {
	@media ( max-aspect-ratio: 1/1 ) { @content; }
}
@mixin for-short {
	@media ( min-aspect-ratio: 2/1 ) { @content; }
}

/*
 * Mixin for clearfix
 * @include clearfix;
*/
@mixin clearfix {
	&:before,
	&:after {
	    content: " "; /* 1 */
	    display: table; /* 2 */
	}

	&:after {
	    clear: both;
	}
}

/*
 * @font-face mixin
 */

@mixin fontface( $font-family, $font-url, $font-name, $font-weight, $font-style: normal, $font-stretch: normal ) {
	@font-face {
		font-family: $font-family;
		src: url( $font-url + '/' + $font-name + '.eot' );
		src: url( $font-url + '/' + $font-name + '.eot#iefix' ) format( 'embedded-opentype' ),
			 url( $font-url + '/' + $font-name + '.woff2' ) format( 'woff2' ),
			 url( $font-url + '/' + $font-name + '.woff' ) format( 'woff' );
		font: {
			weight: $font-weight;
			style: $font-style;
			stretch: $font-stretch;
		}
	}
}

@mixin webfont( $font-family ) {

	/*
	@if ( $font-family == 'Whatever' ) {
		font-family: 'Whatever', sans-serif;
		font-weight: 400;
		font-style: normal;
	}

	@if ( $font-family == 'Whatever Italic' ) {
		font-family: 'Whatever', sans-serif;
		font-weight: 400;
		font-style: italic;
	}
	*/
}

@function col-width( $cont-cols, $return-cols, $extra-gaps: 0 ) {
	@return calc( var( --grid-gap ) * #{ $extra-gaps } + #{ $return-cols } * ( 100% - var( --grid-gap ) * #{ $cont-cols - 1 } ) / #{ $cont-cols } );
}

@function rem-calc( $size ) {
	@return #{ $size / $base-font-size }rem;
}

@mixin bg-layers( $p-el: 'before', $selector: '.text' ) {
	position: relative;

	#{ $selector } {
		position: relative;
		z-index: 3;
	}

	&:#{ $p-el } {
		@include absolute-fill;
		z-index: 2;

		content: '';
	}
}

@mixin absolute-fill( $offset: 0 ) {
	position: absolute;
	top: #{ $offset }px;
	left: #{ $offset }px;
	
	display: block;
	width: calc( 100% - #{ $offset * 2 }px );
	height: calc( 100% - #{ $offset * 2 }px );
}

@mixin absolute-cover( $offset: 0 ) {
	@include absolute-fill( $offset );

	object-fit: cover;
}

@mixin text-clamp( $lines: 2, $line-height: false ) {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $lines;

    // Fallback for non-Webkit browsers
    // (won't show `â€¦` at the end of the block)
    @if $line-height {
        max-height: $line-height * $lines * $line-height / $base-font-size * 1rem;
    }
}

@mixin hide-scrollbars {
	scrollbar-width: none;
	-ms-overflow-style: none;
	&::-webkit-scrollbar,
	&::-webkit-scrollbar-thumb {
		width: 0;
		height: 0;
		display: none;
	}
}

@mixin hover {
	@media ( hover ) {
		&:hover {
			@content;
		}
	}
}